name: Pikafish

on:
  push:
    branches:
      - main


jobs:
  windows:	
    strategy:	
      matrix:	
        arch: ["-bmi2", "-avx2", "-modern"]
    env:
      COMPILER: clang++
      COMP: clang
    defaults:
      run:
        working-directory: src
        shell: msys2 {0}
    runs-on: windows-latest

    steps:	
      - uses: actions/checkout@v3

      - name: Setup msys and install required packages
        uses: msys2/setup-msys2@v2
        with:
          msystem: clang64
          install: mingw-w64-clang-x86_64-clang make git expect

      - name: make
        run: |
          make clean
          make -j build ARCH=x86-64${{ matrix.arch }} EXE=pikafish${{ matrix.arch }}.exe
          strip pikafish${{ matrix.arch }}.exe	
      - name: copy binary to folder
        run: |
          cd ..
          mkdir windows
          cp src/pikafish*.exe windows
      - uses: actions/upload-artifact@v3	
        with:	
          name: pikafish
          path: |
            windows/pikafish*
            AUTHORS
            Copying.txt
            NNUE-License.txt
            README.md
            Top CPU Contributors.txt
  linux:
    strategy:	
      matrix:	
        arch: ["-bmi2"]
    env:
      COMPILER: clang++
      COMP: clang
    defaults:
      run:
        working-directory: src
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v3

      - name: make linux
        run: |
          make clean
          make -j build ARCH=x86-64${{ matrix.arch }} EXE=pikafish${{ matrix.arch }}
          strip pikafish${{ matrix.arch }}
      - name: Setup Android NDK
        if: ${{ matrix.arch == '' }}
        uses: nttld/setup-ndk@v1.2.0
        with:
          ndk-version: r25b

      - name: make arm
        if: ${{ matrix.arch == '' }}
        run: |
          export PATH=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH
          export LDFLAGS="-static -Wno-unused-command-line-argument"
          export COMP="ndk"
          export COMPILER="aarch64-linux-android21-clang++"
          make clean
          make -j build ARCH=armv8 EXE=pikafish-arm
          make strip ARCH=armv8 EXE=pikafish-arm
      - name: copy binary to folder
        run: |
          cd ..
          mkdir linux
          cp src/pikafish* linux
      - name: upload to fishtest
        if: ${{ contains(github.event.head_commit.message, '[test]') && (matrix.arch == '-bmi2') }}
        run: curl -F engine=@pikafish-bmi2 http://test.pikafish.org/api/add_task -F "task_name=${{ github.event.head_commit.message }}" -F "password=${{ secrets.NOTHING }}" -F "game_time=10" -F "inc_time=0.1" -F "depth=-1" -F "nodes=-1" -F "elo0=0" -F "elo1=5" -F "alpha=0.05" -F "beta=0.05" -F "visible=0"

      - uses: actions/upload-artifact@v3	
        with:	
          name: pikafish	
          path: |
            linux/pikafish*
            AUTHORS
